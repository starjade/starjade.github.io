<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XWOS – 锁</title>
    <link>/docs/lua-manual/xwos/lock/</link>
    <description>Recent content in 锁 on XWOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/lua-manual/xwos/lock/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 自旋锁</title>
      <link>/docs/lua-manual/xwos/lock/spinlock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/lua-manual/xwos/lock/spinlock/</guid>
      <description>
        
        
        &lt;h2 id=&#34;xwlua自旋锁对象&#34;&gt;XWLUA自旋锁对象&lt;/h2&gt;
&lt;p&gt;XWLUA自旋锁对象是由XWOS内核的自旋锁（XWOS的自旋锁只是一种数据类型，并不
是对象）与XWOS内核对象组成，Lua虚拟机通过引用计数管理XWLUA自旋锁对象。&lt;/p&gt;
&lt;p&gt;在Lua语言中，通过&lt;a href=&#34;../../../xwos#%E5%AF%B9%E8%B1%A1%E5%BC%BA%E6%8C%87%E9%92%88&#34;&gt;对象强指针&lt;/a&gt;来表示Lua自旋锁对象。&lt;/p&gt;
&lt;h2 id=&#34;to-be-closed特性&#34;&gt;to-be-closed特性&lt;/h2&gt;
&lt;p&gt;XWLUA自旋锁对象支持Lua语言的&lt;strong&gt;to-be-closed&lt;/strong&gt;特性，Lua自旋锁能在代码块结束时自动解锁。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mysplk &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.splk.new()
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;test&lt;/span&gt;()
  &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;local&lt;/span&gt; lock&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;close&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mysplk
  lock:lock()
  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 临界区&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 自动解锁自旋锁&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xwlua-api参考&#34;&gt;XWLUA API参考&lt;/h2&gt;
&lt;h3 id=&#34;包xwossplk&#34;&gt;&lt;strong&gt;包：xwos.splk&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;xwossplknew&#34;&gt;&lt;code&gt;xwos.splk.new()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：新建一个Lua自旋锁&lt;/li&gt;
&lt;li&gt;返回值：(userdata)新的Lua自旋锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mysplk &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.splk.new()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;类splksp&#34;&gt;&lt;strong&gt;类：splksp&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;说明：自旋锁对象强指针类&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;splkspunlock&#34;&gt;&lt;code&gt;splksp:unlock()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：解锁自旋锁&lt;/li&gt;
&lt;li&gt;参数splksp：(userdata, 输入)类成员函数的this参数，Lua自旋锁对象的强引用指针&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;splksplockt&#34;&gt;&lt;code&gt;splksp:lock([&amp;quot;t&amp;quot;])&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：锁定自旋锁&lt;/li&gt;
&lt;li&gt;参数splksp：(userdata, 输入)类成员函数的this参数，Lua自旋锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;可选参数&amp;quot;t&amp;quot;：(string, 输入)尝试上锁自旋锁，若自旋锁已开启临界区，立即返回，
不会自旋等待。&lt;/li&gt;
&lt;li&gt;返回值：(number)错误码
&lt;ul&gt;
&lt;li&gt;0：无错误&lt;/li&gt;
&lt;li&gt;-EINVAL：参数错误&lt;/li&gt;
&lt;li&gt;-EAGAIN：尝试上锁失败，仅当存在可选参数&amp;quot;t&amp;quot;时才会出现此错误值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 顺序锁</title>
      <link>/docs/lua-manual/xwos/lock/seqlock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/lua-manual/xwos/lock/seqlock/</guid>
      <description>
        
        
        &lt;h2 id=&#34;xwlua顺序锁对象&#34;&gt;XWLUA顺序锁对象&lt;/h2&gt;
&lt;p&gt;XWLUA顺序锁对象是由XWOS内核的顺序锁（XWOS的顺序锁只是一种数据类型，并不
是对象）与XWOS内核对象组成，Lua虚拟机通过引用计数管理XWLUA顺序锁对象。&lt;/p&gt;
&lt;p&gt;在Lua语言中，通过&lt;a href=&#34;../../../xwos#%E5%AF%B9%E8%B1%A1%E5%BC%BA%E6%8C%87%E9%92%88&#34;&gt;对象强指针&lt;/a&gt;来表示Lua顺序锁对象。&lt;/p&gt;
&lt;h2 id=&#34;to-be-closed特性&#34;&gt;to-be-closed特性&lt;/h2&gt;
&lt;p&gt;XWLUA顺序锁对象支持Lua语言的&lt;strong&gt;to-be-closed&lt;/strong&gt;特性，Lua顺序锁能在代码块结束时自动解锁。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mysqlk &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.sqlk.new()
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;test&lt;/span&gt;()
  &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;local&lt;/span&gt; lock&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;close&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mysqlk
  lock:lock(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;wr&amp;#34;&lt;/span&gt;)
  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 临界区&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 自动解锁顺序锁&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xwlua-api参考&#34;&gt;XWLUA API参考&lt;/h2&gt;
&lt;h3 id=&#34;包xwossqlk&#34;&gt;&lt;strong&gt;包：xwos.sqlk&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;xwossqlknew&#34;&gt;&lt;code&gt;xwos.sqlk.new()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：新建一个Lua顺序锁&lt;/li&gt;
&lt;li&gt;返回值：(userdata)新的Lua顺序锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mysqlk &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.sqlk.new()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;类sqlksp&#34;&gt;&lt;strong&gt;类：sqlksp&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;说明：顺序锁对象强指针类&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sqlksprd_begin&#34;&gt;&lt;code&gt;sqlksp:rd_begin()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：开始读临界区&lt;/li&gt;
&lt;li&gt;参数sqlksp：(userdata, 输入)类成员函数的this参数，Lua顺序锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;返回值：(number)锁的顺序值&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sqlksprd_retry&#34;&gt;&lt;code&gt;sqlksp:rd_retry()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：测试顺序值是否改变&lt;/li&gt;
&lt;li&gt;参数sqlksp：(userdata, 输入)类成员函数的this参数，Lua顺序锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;返回值：(boolean)
&lt;ul&gt;
&lt;li&gt;true：顺序值已经改变，读的结果无效&lt;/li&gt;
&lt;li&gt;false：顺序值未改变，读的结果有效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sqlkspget_seq&#34;&gt;&lt;code&gt;sqlksp:get_seq()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：获取顺序锁的顺序值&lt;/li&gt;
&lt;li&gt;参数sqlksp：(userdata, 输入)类成员函数的this参数，Lua顺序锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;返回值：(number)锁的顺序值&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sqlkspunlock&#34;&gt;&lt;code&gt;sqlksp:unlock()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：解锁顺序锁&lt;/li&gt;
&lt;li&gt;参数sqlksp：(userdata, 输入)类成员函数的this参数，Lua顺序锁对象的强引用指针&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sqlksplocklktype-t&#34;&gt;&lt;code&gt;sqlksp:lock(lktype, [&amp;quot;t&amp;quot;])&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：锁定顺序锁&lt;/li&gt;
&lt;li&gt;参数sqlksp：(userdata, 输入)类成员函数的this参数，Lua顺序锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;参数lktype：(string, 输入)锁类型，取值
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;wr&amp;rdquo;：写锁&lt;/li&gt;
&lt;li&gt;&amp;ldquo;rdex&amp;rdquo;：独占读锁&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可选参数&amp;quot;t&amp;quot;：(string, 输入)尝试上锁顺序锁，若顺序锁已开启临界区，立即返回，
不会自旋等待。&lt;/li&gt;
&lt;li&gt;返回值：(number)错误码
&lt;ul&gt;
&lt;li&gt;0：无错误&lt;/li&gt;
&lt;li&gt;-EINVAL：参数错误&lt;/li&gt;
&lt;li&gt;-EAGAIN：尝试上锁失败，仅当存在可选参数&amp;quot;t&amp;quot;时才会出现此错误值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 互斥锁</title>
      <link>/docs/lua-manual/xwos/lock/mutex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/lua-manual/xwos/lock/mutex/</guid>
      <description>
        
        
        &lt;h2 id=&#34;to-be-closed特性&#34;&gt;to-be-closed特性&lt;/h2&gt;
&lt;p&gt;互斥锁对象支持Lua语言的&lt;strong&gt;to-be-closed&lt;/strong&gt;特性，互斥锁能在代码块结束时自动解锁。&lt;/p&gt;
&lt;h2 id=&#34;可重入锁&#34;&gt;可重入锁&lt;/h2&gt;
&lt;p&gt;互斥锁是可重入锁，同一个Lua线程可以反复Lock。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mymtx &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.mtx.new()
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;test&lt;/span&gt;()
  &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;local&lt;/span&gt; lock&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;close&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mymtx
  lock:lock()
  &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 临界区&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 自动解锁互斥锁&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xwlua-api参考&#34;&gt;XWLUA API参考&lt;/h2&gt;
&lt;h3 id=&#34;包xwosmtx&#34;&gt;&lt;strong&gt;包：xwos.mtx&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;xwosmtxnew&#34;&gt;&lt;code&gt;xwos.mtx.new()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：新建一个互斥锁&lt;/li&gt;
&lt;li&gt;返回值：(userdata)新的互斥锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mymtx &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.mtx.new()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;类mtxsp&#34;&gt;&lt;strong&gt;类：mtxsp&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;说明：互斥锁对象强指针类&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mtxspunlock&#34;&gt;&lt;code&gt;mtxsp:unlock()&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：解锁互斥锁&lt;/li&gt;
&lt;li&gt;参数mtxsp：(userdata, 输入)类成员函数的this参数，互斥锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;返回值：(number)错误码
&lt;ul&gt;
&lt;li&gt;0：成功&lt;/li&gt;
&lt;li&gt;-EOWNER：线程并没有锁定此互斥锁&lt;/li&gt;
&lt;li&gt;-ENOTINTHD：不在线程上下文中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mtxsplockop&#34;&gt;&lt;code&gt;mtxsp:lock([op])&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：锁定互斥锁&lt;/li&gt;
&lt;li&gt;参数mtxsp：(userdata, 输入)类成员函数的this参数，互斥锁对象的强引用指针&lt;/li&gt;
&lt;li&gt;可选参数op：
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;t&amp;rdquo;：(string, 输入)尝试上锁互斥锁，若互斥锁已开启临界区，立即返回，
不会等待；&lt;/li&gt;
&lt;li&gt;time：(number, 输入)期望的等待时间，超时后返回错误码-ETIMEDOUT。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;返回值：(number)错误码
&lt;ul&gt;
&lt;li&gt;0：无错误&lt;/li&gt;
&lt;li&gt;-EINVAL：参数错误&lt;/li&gt;
&lt;li&gt;-ENODATA：尝试上锁失败，仅当存在可选参数&amp;quot;t&amp;quot;时才会出现此错误值&lt;/li&gt;
&lt;li&gt;-ETIMEDOUT：超时&lt;/li&gt;
&lt;li&gt;-EINTR：等待被中断&lt;/li&gt;
&lt;li&gt;-ENOTINTHD：不在线程上下文中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;mymtx &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; xwos.mtx.new()
mymtx:lock() &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 上锁mymtx，若上锁失败，当前线程会阻塞等待&lt;/span&gt;
rc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mymtx:lock(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 尝试上锁mymtx，若上锁失败，会返回-ENODATA&lt;/span&gt;
rc &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; mymtx:lock(&lt;span style=&#34;color:#666&#34;&gt;1000000000&lt;/span&gt;) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;-- 上锁mymtx，若上锁失败，当前线程会阻塞等待，但最多等待1s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
